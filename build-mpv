#!/bin/bash

args="--disable-manpage-build --disable-pdf-build --disable-vf-dlopen-filters --disable-macosx-bundle \
  --enable-iconv --disable-terminfo --disable-termcap --disable-termios --disable-shm --disable-libguess --disable-libsmbclient \
  --disable-encoding --disable-joystick --disable-lirc --disable-vcd --disable-libbluray --enable-dvdread --enable-dvdnav \
  --disable-enca --enable-mpg123 --disable-ladspa --disable-libbs2b --disable-lcms2 --enable-libswresample --disable-libavfilter \
  --disable-vf-lavfi --disable-af-lavfi --disable-libavdevice --disable-libpostproc --disable-libavresample \
  --disable-sdl2 --disable-sdl1 --disable-rsound --disable-sndio --disable-openal --disable-dsound --disable-wasapi \
  --disable-cocoa --disable-wayland --disable-x11 --disable-xss --disable-xext --disable-xv --disable-xinerama \
  --disable-xf86vm --disable-xf86xk --disable-gl-cocoa --disable-gl-x11 --disable-gl-wayland --disable-gl-win32 --disable-gl \
  --disable-corevideo --disable-vdpau --disable-vdpau-gl-x11 --disable-vaapi --disable-vaapi-vpp --disable-vaapi-glx --disable-caca \
  --disable-dvb --disable-dvbin --disable-jpeg --disable-direct3d --disable-vda-gl --disable-vdpau-decoder --disable-vdpau-hwaccel \
  --disable-radio --disable-radio-capture --disable-radio-v4l2 --disable-tv --disable-tv-v4l2 --disable-libv4l2 --disable-pvr \
  --disable-audio-input --disable-lua"

kern=`uname -s`
if test $kern = "Darwin"; then
  echo "Build for OS X"
  args="$args --enable-coreaudio --enable-vda-hwaccel"
  njobs=`sysctl hw.ncpu | awk '{print $2}'`
elif test $kern = "Linux"; then
  echo "Build for Linux"
  args="$args --enable-oss-audio --enable-pulse --enable-jack --enable-alsa" # --enable-vaapi-hwaccel
  njobs=$(nproc)
else
  echo "Not supported!"
  exit
fi

export PKG_CONFIG_PATH="../../build/lib/pkgconfig:${PKG_CONFIG_PATH}"

if `pkg-config --exists libquvi-0.9`; then # libquvi9 exists
  args="$args --disable-libquvi4"
else # libquvi9 doesn't exist
  args="$args --disable-libquvi9"
fi

cd src/mpv && ./waf clean; ./waf distclean; ./waf configure $args
./waf build -j $njobs

allobjs=`find . -name '*.o'`
objs=""
for obj in $allobjs; do
  if [[ $obj =~ ^.*(vo_null|af_dummy|vo_vaapi|decode/vaapi|vdpau|vda|conf_check_.*).o$ ]]; then
    continue
  fi
  objs+=" $obj"
done

install -d ../../build/lib
rm ../../build/lib/libcmplayer_mpv.a
ar rcsv ../../build/lib/libcmplayer_mpv.a $objs
